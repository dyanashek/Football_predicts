import os
import django

from asgiref.sync import sync_to_async

os.environ.setdefault('DJANGO_SETTINGS_MODULE', 'football.settings')
django.setup()

from django.utils import timezone
import config

start_text = '–ü—Ä–∏–≤–µ—Ç!\nC –ø–æ–º–æ—â—å—é —ç—Ç–æ–≥–æ –±–æ—Ç–∞ —Ç—ã —Å–º–æ–∂–µ—à—å —Å–æ—Ä–µ–≤–Ω–æ–≤–∞—Ç—å—Å—è –≤ —Ç–æ—á–Ω–æ—Å—Ç–∏ —Å–≤–æ–∏—Ö —Ñ—É—Ç–±–æ–ª—å–Ω—ã—Ö –ø—Ä–æ–≥–Ω–æ–∑–æ–≤!'
subscribe_needed = f'üì∞ –£—Å–ª–æ–≤–∏–µ–º –¥–∞–Ω–Ω–æ–≥–æ –±–æ—Ç–∞ —è–≤–ª—è–µ—Ç—Å—è –ø–æ–¥–ø–∏—Å–∫–∞ –Ω–∞ [–∫–∞–Ω–∞–ª]({config.CHANNEL_LINK}).'
menu_text = '‚öΩÔ∏è –ú–µ–Ω—é:'
no_subscribe = '–í—ã –Ω–µ –ø–æ–¥–ø–∏—Å–∞–Ω—ã –Ω–∞ –∫–∞–Ω–∞–ª, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑.'
tournaments_text = 'ü•Ö –§—É—Ç–±–æ–ª—å–Ω—ã–µ —á–µ–º–ø–∏–æ–Ω–∞—Ç—ã:'
predicts_text = '–ü—Ä–æ–≥–Ω–æ–∑—ã –Ω–∞ —Å—á–µ—Ç –º–∞—Ç—á–∞:'
ratings_text = '–†–µ–π—Ç–∏–Ω–≥–∏ —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤:'

async def match_description(match, predict):
    round = await sync_to_async(lambda: match.round.title)()
    tournament = await sync_to_async(lambda: match.round.tournament.title)()

    match_date = timezone.localtime(match.date).strftime('%d.%m.%Y %H:%M')
    reply_text = f'*{match_date}\n\n{tournament}\n{round}:*\n'
    if match.score1 is not None and match.score2 is not None:
        reply_text += f'*{match.team1}* {match.score1}:{match.score2} *{match.team2}*'
    else:
        reply_text += f'{match.team1} - {match.team2}'

    if predict:
        if timezone.localtime(match.date) <= timezone.now():
            predict_title = '\n\n–í–∞—à –ø—Ä–æ–≥–Ω–æ–∑'
        else:
            predict_title = '\n\n–¢–µ–∫—É—â–∏–π –ø—Ä–æ–≥–Ω–æ–∑'

        predict_block =f'*{predict_title}:*\n*{match.team1}* {predict.score1}:{predict.score2} *{match.team2}*'
        if predict.points is not None:
            predict_block += f'\n*–û—á–∫–∏:* {predict.points}'
        
        reply_text += predict_block
    
    if timezone.localtime(match.date) >= timezone.now():
        if predict:
            reply_text += '\n\n*–ò–∑–º–µ–Ω–∏—Ç—å –ø—Ä–æ–≥–Ω–æ–∑:*'
        else:
            reply_text += '\n\n*–°–¥–µ–ª–∞—Ç—å –ø—Ä–æ–≥–Ω–æ–∑:*'
    
    return reply_text


async def leaderboard(title, leaderboard, user_place, user):
    reply_text = f'*{title}:*\n'
    for num, leader in enumerate(leaderboard[:10]):
        total_points = leader.total_points
        if total_points is None:
            total_points = 0
        if user_place and num + 1 == user_place:
            reply_text += f'\n*{num + 1}. {leader.name}: {total_points} –±.*'
        else:
            reply_text += f'\n*{num + 1}.* {leader.name}: *{total_points} –±.*'
        
        if user.user_id == config.MANAGER_ID:
            reply_text += leader.user_id
    
    if user_place and user_place > 10:
        user_name = leaderboard[user_place - 1].name
        total_points = leaderboard[user_place - 1].total_points
        if total_points is None:
            total_points = 0
        reply_text += f'\n\n...\n*{user_place}.* {user_name}: *{total_points} –±.*\n...'
    elif not user_place:
        reply_text += f'\n\n...\n*–í—ã –µ—â–µ –Ω–µ –ø—Ä–∏–Ω—è–ª–∏ —É—á–∞—Å—Ç–∏—è –≤ –¥–∞–Ω–Ω–æ–º —Ä–µ–π—Ç–∏–Ω–≥–µ.'

    return reply_text